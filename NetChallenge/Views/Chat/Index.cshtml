@{
    ViewData["Title"] = "Chats";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-3">
            <h4>Chats</h4>
            <div id="chatList" style="border: 1px solid #ccc; padding: 10px; height: 400px; overflow-y: auto;">
                <!-- Chats list -->
            </div>
            <button id="createChat" class="btn btn-success mt-2 w-100">Create New Chat</button>
        </div>

        <div class="col-md-9">
            <h2 id="chatTitle">Chatroom</h2>
            <div id="chatMessages" style="border: 1px solid #ccc; padding: 10px; height: 400px; overflow-y: auto;">
                <!-- Messages will appear here -->
            </div>

            <div class="mt-3">
                <input id="messageInput" type="text" class="form-control" placeholder="Type your message" />
                <button id="sendMessage" class="btn btn-primary mt-2">Send</button>
            </div>
        </div>
    </div>
</div>

<script src="@Html.Raw("https://cdn.jsdelivr.net/npm/@microsoft/signalr@6.0.0/dist/browser/signalr.min.js")"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    let defaultChatId = "1";

    // Default chat
    let currentChatId = defaultChatId;

    connection.on("ReceiveMessage", (chatId, user, message, timestamp) => {
        if (chatId === currentChatId) {
            const chatMessages = document.getElementById("chatMessages");
            const newMessage = document.createElement("div");
            newMessage.innerHTML = `<strong>[${timestamp}] ${user}:</strong> ${message}`;
            chatMessages.appendChild(newMessage);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }
    });

    connection.on("LoadMessages", (messages) => {
        const chatMessages = document.getElementById("chatMessages");
        messages.forEach(message => {
            const newMessage = document.createElement("div");
            newMessage.innerHTML = `<strong>[${message.timestamp}] ${message.user}:</strong> ${message.messageText}`;
            chatMessages.appendChild(newMessage);
        });
    });

    connection.on("UpdateChatList", (chats) => {
        const chatList = document.getElementById("chatList");
        chatList.innerHTML = '';
        chats.forEach(chat => {
            const button = document.createElement("button");
            button.className = "btn btn-light w-100 mb-2";
            button.setAttribute("data-chat-id", chat.id);
            button.textContent = chat.name;
            button.addEventListener("click", () => selectChat(chat.id, chat.name));

            if (currentChatId == chat.id) {
                button.classList.add('selected');
            }

            chatList.appendChild(button);
        });
    });

    connection.on("SelectDefaultChat", () => {
        const defaultChatButton = document.querySelector(`[data-chat-id="${defaultChatId}"]`);
        if (defaultChatButton) {
            defaultChatButton.click();
        }
    });

    connection.start()
        .then(() => console.log("Connected to SignalR"))
        .catch(err => console.error("Error connecting to SignalR: ", err));

    document.getElementById("sendMessage").addEventListener("click", () => {
        const messageInput = document.getElementById("messageInput");
        const message = messageInput.value;
        if (message && currentChatId) {
            connection.invoke("SendMessage", currentChatId, message)
                .catch(err => console.error("Error sending message: ", err));
            messageInput.value = "";
        }
    });

    document.getElementById("createChat").addEventListener("click", () => {
        const chatName = prompt("Enter the name of the new chat:");
        if (chatName) {
            connection.invoke("CreateChat", chatName)
                .catch(err => console.error("Error creating chat: ", err));
        }
    });

    function selectChat(chatId, chatName) {
        currentChatId = chatId;
        document.getElementById("chatTitle").textContent = chatName;
        document.getElementById("chatMessages").innerHTML = '';
        connection.invoke("JoinChat", chatId)
            .catch(err => console.error("Error joining chat: ", err));

        document.querySelectorAll('.btn-light').forEach(button => button.classList.remove('selected'));
        document.querySelector(`button[data-chat-id='${chatId}']`).classList.add('selected');

        connection.invoke("RetrieveMessages", chatId)
            .catch(err => console.error("Error retrieving messages: ", err));
    }
</script>

<style>
    .selected {
        background-color: #cce7ff;
    }
</style>
